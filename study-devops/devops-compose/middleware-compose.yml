version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper-middleware
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes  # 生产环境应设为no并配置认证
    user: root  # 临时解决权限问题，生产环境应配置正确权限
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500M
        reservations:
          cpus: '0.1'
          memory: 200M
    healthcheck: # 健康检查增强可靠性
      test: [ "CMD", "zkCli.sh", "status" ]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka-middleware
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-middleware:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://192.168.0.56:9092 # TODO 需要替换为宿主机IP
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    user: root
    depends_on:
      - zookeeper
    deploy:
      resources:
        limits:
          cpus: '0.8'
          memory: 1200M
        reservations:
          cpus: '0.2'
          memory: 800M
    healthcheck: # 健康检查增强可靠性[5](@ref)
      test: [ "CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9093" ]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql:
    image: mysql:5.7.38
    container_name: mysql-middleware
    restart: always  # 异常退出自动重启
    environment:
      MYSQL_ROOT_PASSWORD: "%7HKgJO6oyov34Ch"
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_conf:/etc/mysql/conf.d:ro
      - mysql_data:/var/lib/mysql
      - mysql_logs:/var/log/mysql
    healthcheck: # 健康检查（需 MySQL 8.0+ 镜像）[1,5](@ref)
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1000M
        reservations:
          cpus: '0.5'
          memory: 500M

  redis:
    image: redis:5.0.14
    container_name: redis-middleware
    restart: unless-stopped
    command: redis-server /etc/redis/redis.conf
    ports:
      - "6379:6379"
    volumes:
      - redis_config:/etc/redis:ro
      - redis_data:/data
    environment:
      TZ: Asia/Shanghai
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 800M
        reservations:
          cpus: '0.8'
          memory: 500M
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
  tdengine:
    image: tdengine/tdengine:3.2.3.0
    container_name: tdengine-middleware
    restart: always
    ports:
      - "6041:6041"
    volumes:
      - tdengine_data:/var/lib/taos
      - tdengine_config:/etc/taos:ro
      - tdengine_logs:/var/log/taos
    environment:
      TZ: Asia/Shanghai
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1500M
        reservations:
          cpus: '0.8'
          memory: 1200M
    healthcheck:
      test: [ "CMD", "taos", "--help" ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./mysql/data
  mysql_conf:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./mysql/config
  mysql_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./mysql/logs

  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./redis/data
  redis_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./redis/config

  tdengine_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./tdengine/data
  tdengine_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./tdengine/config
  tdengine_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./tdengine/logs

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zjut.study.tdengine.boot.dao.WeatherMapper">

    <resultMap id="BaseResultMap" type="com.zjut.study.tdengine.boot.domain.WeatherDO">
        <id column="ts" jdbcType="TIMESTAMP" property="ts"/>
        <result column="temperature" jdbcType="FLOAT" property="temperature"/>
        <result column="humidity" jdbcType="FLOAT" property="humidity"/>
    </resultMap>

    <select id="lastOne" resultType="java.util.Map">
        select last_row(*), location from td.weather;
    </select>

    <update id="dropDB">
        drop
        database if exists td
    </update>

    <update id="createDB">
        create
        database if not exists td
    </update>

    <update id="createSuperTable">
        create table if not exists weather
        (
            ts
            timestamp,
            temperature
            float,
            humidity
            float,
            note
            binary
        (
            64
        )) tags
        (
            location nchar
        (
            64
        ))
    </update>

    <update id="createTable" parameterType="com.zjut.study.tdengine.boot.domain.WeatherDO">
        create table if not exists t#{groupId} using weather tags
        (
            #{location},
            #{groupId}
        )
    </update>

    <select id="select" resultMap="BaseResultMap">
        select * from weather order by ts desc
        <if test="limit != null">
            limit #{limit,jdbcType=BIGINT}
        </if>
        <if test="offset != null">
            offset #{offset,jdbcType=BIGINT}
        </if>
    </select>

    <insert id="insert" parameterType="com.zjut.study.tdengine.boot.domain.WeatherDO">
        insert into t#{groupId} (ts, temperature, humidity, note)
        values (#{ts}, ${temperature}, ${humidity}, #{note})
    </insert>

    <select id="getSubTables" resultType="String">
        select tbname
        from weather
    </select>

    <select id="count" resultType="int">
        select count(*)
        from weather
    </select>

    <resultMap id="avgResultSet" type="com.zjut.study.tdengine.boot.domain.WeatherDO">
        <id column="ts" jdbcType="TIMESTAMP" property="ts"/>
        <result column="avg(temperature)" jdbcType="FLOAT" property="temperature"/>
        <result column="avg(humidity)" jdbcType="FLOAT" property="humidity"/>
    </resultMap>

    <select id="avg" resultMap="avgResultSet">
        select avg(temperature), avg(humidity)
        from weather interval(1m)
    </select>

</mapper>
